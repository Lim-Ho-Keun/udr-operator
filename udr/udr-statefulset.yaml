apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: udr
  namespace: 5gc-udr
  annotations:
    sidecar.istio.io/inject: "true"
spec:
  serviceName: "udr"
  replicas: 1
  selector:
    matchLabels:
      app: udr
  template:
    metadata:
      labels:
        app: udr
      annotations:
        proxy.istio.io/config: 'concurrency: 0'
        #sidecar.istio.io/proxyCPULimit : "4"
        #sidecar.istio.io/proxyCPU : "100m"
        #sidecar.istio.io/proxyMemoryLimit : "1Gi"
        #sidecar.istio.io/proxyMemory : "128Mi"

    spec:
      shareProcessNamespace: true
      containers:
      - name: udr
        image: private.el:5000/udr:latest
        #imagePullPolicy: Always
        #resources:
        #  limits:
        #    memory: "2Gi"
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        env:
        - name: TZ
          value: Asia/Seoul
        volumeMounts:
        - name: pv-5g-udr-log
          mountPath: /udr/log
        - name: udr-commondb-config
          mountPath: /usr/local/mariadb/odbc/odbc.ini
          subPath: odbc.ini
        - name: 5gc-license
          mountPath: /lib/5gc-license

        readinessProbe:
          exec:
            command:
              - cat
              - /tmp/healthy
          initialDelaySeconds: 3
          periodSeconds: 3

        securityContext:
          capabilities:
            add: ["NET_ADMIN", "SYS_TIME", "NET_RAW"]

      hostAliases:
      - ip: "220.123.31.30"
        hostnames:
        - "cnfomp"

      initContainers:
      - name: change-ownership-udr
        image: private.el:5000/udr:latest
        #imagePullPolicy: Always
        command: ["/bin/sh", "-c"]
        args: ["/usr/bin/cp /udr/cfg/salog.cfg /udr/log && /bin/chown -R 1000:1000 /udr/log"]
        volumeMounts:
        - name: pv-5g-udr-log
          mountPath: /udr/log
        - name: udr-commondb-config
          mountPath: /usr/local/mariadb/odbc/odbc.ini
          subPath: odbc.ini
        - name: 5gc-license
          mountPath: /lib/5gc-license

      volumes:
      - name: udr-commondb-config
        configMap:
          name: commondb-config
      - name: 5gc-license
        hostPath:
          path: /lib/5gc-license

  volumeClaimTemplates:
  - metadata:
      name: pv-5g-udr-log
      namespace: 5gc-udr
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "hostpath"
      resources:
        requests:
          storage: 10Gi

